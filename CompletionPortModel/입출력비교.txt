윈도우 운영체제의 소켓 입출력 모델 중 가장 뛰어난 성능을 제공하는 Completion Port 모델은
비동기 입출력을 지원한다.

입출력에는 동기 입출력과 비동기 입출력이 있는데 전형적인 동기 입출력은 여태 실습해왔다.
응용 프로그램이 입출력 함수를 호출하고 입출력 작업이 끝날 때까지 대기하는 것이 동기 입출력 모델이며,
응용 프로그램이 입출력 함수를 호출하고 곧바로 리턴하는 것이 비동기(중첩) 입출력 모델이다.

동기 입출력은 입출력 작업이 끝나야 함수가 리턴하므로 결과를 처리하는 도중에는 다른 작업을 진행할 수 없다.
앞에서 알아본 WSAAsyncSelect는 중간에 다른 작업을 할 수 있었다.

다만, 이들은 비동기 입출력이 아닌 동기 입출력에 비동기 통지(Asynchronous Notification)을 사용했다.
즉, 여태까지 실습해온 모든 예제들은 동기 입출력이며 여기에 비동기 통지를 추가한 모델이 WSAAsyncSelect 라는 것이다.

지금부터 학습할 입출력 방식인 비동기 입출력(Asynchronous I/O) 또는 중첩 입출력(Overlapped I/O)은
입출력 작업이 끝날 때 운영체제가 작업 완료를 응용 프로그램에게 알려주는 것이다.

이때 응용 프로그램은 하던 작업을 중단하고 입출력 결과를 출력하기만 하면 된다.

비동기 통지와 비동기 입출력을 결합했다고 볼 수 있는 Completion Port 모델에 대해 알아보자.

* select 모델은 select 함수를 호출한 후 대기해야 하므로 엄밀한 의미의 비동기 통지는 아니다.
* 하지만 타임아웃을 사용하면 사건이 발생하지 않아도 리턴하므로 다른 작업을 하는 것이 가능하다.
* 또, 운영체제가 특정 사건의 발생을 알려주므로 본질적으론 비동기적이라고도 할 수 있다.