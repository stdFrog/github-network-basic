소켓 입출력 모델에 기반한 서버를 작성하기에 앞서 기존의 서버 작성 모델을 살펴보자.

지금까지 배운 TCP 혹은 UDP 서버는 반복 서버와 병행 서버로 분류할 수 있다.



반복 서버(Iterative Server)
 - 여러 클라이언트를 한 번에 하나씩 처리한다.
 - 한 개의 스레드로 구현하므로 시스템 자원 소모가 적다.
 - 한 클라이언트의 처리 시간이 길어지면 다른 클라이언트의 대기 시간이 길어진다.

이런 특징이 있어 반복 서버는 UDP 서버를 작성할 때 적합하다.
UDP는 TCP와 달리 논리적 연결 개념을 사용하지 않으므로, 반복 서버 방식으로 다수의 클라이언트를 동시에 서비스할 수 있다.



병행 서버(Concurrent Server)
 - 여러 클라이언트를 동시에 처리한다.
 - 멀티스레드 기반 TCP 서버가 이에 해당한다.
 - 한 클라이언트의 처리 시간이 길어지더라도 다른 클라이언트의 대기 시간에 영향을 주지 않는다.
 - 스레드를 여러 개 생성하여 구현하므로 시스템 자원 소모가 크다.

이런 특징이 있어 병행 서버는 TCP 서버를 작성할 때 적합하다.
TCP는 UDP와 달리 논리적 연결 개념을 사용하므로, 병행 서버 방식을 사용하지 않고는 다수의 클라이언트를 동시에
서비스하기 어렵다.

하지만, TCP 서버가 각 클라이언트와 아주 짧은 시간 동안만 통신하고 동시에 접속하는 클라이언트 수가 제한적이라면
반복 서버 방식으로 작성해도 된다.