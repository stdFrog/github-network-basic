바람직한 소켓 입출력 모델은 반복 서버와 병행 서버의 장점을 모두 갖추면서도 각각의 단점을 해결한 형태가 될 것이다.

유한한 자원(CPU, 메모리 등)을 갖춘 시스템에서 실행되는 서버는 다음과 같은 이상적인 기능을 제공해야 한다.
 - 가능한 많은 클라이언트를 수용한다.
 - 서버는 각 클라이언트의 서비스 요청에 빠르게 반응하며(Short Response Time), 고속으로 데이터를 전송한다(High Throughput).
 - 시스템 자원 사용량(CPU 사용률, 메모리 사용량 등)을 최소화 한다.

이상적인 기능을 제공하는 서버를 구현하기 위해 소켓 입출력 모델에 요구되는 사항을 정리해보면 다음과 같다.


■ 소켓 함수 호출 시 블로킹을 최소화한다.
 - 블로킹을 없애기 위해 넌블로킹 소켓을 사용하는 것으로는 충분하지 않다.
	함수 호출 시 조건을 만족하지 않아 그냥 리턴하게 되면 불필요하게 CPU사용률만 높아지기 때문이다.
	★ 이상적인 소켓 입출력 모델에서는 CPU 사용률을 최소로 하되 넌블로킹 소켓을 사용한 소켓 함수 호출이 항상 성공해야 한다.
	소켓 함수 호출이 성공한다는 것은 조건을 만족하지 않아 함수 오류 코드가 발생하는 경우가 없어야 한다는 뜻이다.

■ 스레드 개수를 일정 수준으로 유지한다.
 - 스레드를 사용하면 여러 작업이 동시에 처리되는 것처럼 보이지만, 실제로는 CPU가 여러 스레드를 짧은 시간 간격으로 번갈아 수행한다.
	따라서 스레드 개수를 무작정 늘린다고 성능이 좋아지지는 않는다. 게다가 스레드는 자신만의 스택을 별도로 유지하므로
	개수가 늘어나면 메모리 사용량이 많아지는 문제도 생긴다.
	시스템에서 동시에 실행할 수 있는 스레드 개수는 CPU개수와 일치하므로 이상적인 소켓 입출력 모델에서는
	CPU개수에 비례하여 스레드를 생성하고 입출력을 처리할 수 있어야 한다.

■ CPU 명령 수행과 입출력 작업을 병행한다.
 - 하드웨어는 진정한 의미의 병렬 동작이 가능하므로 CPU 명령 수행(코드 실행)과 입출력 작업을 동시에 진행할 수 있다.
	이상적인 소켓 입출력 모델에서는 CPU 명령 수행과 소켓 입출력 작업을 병행할 수 있어야 한다.

■ 유저 모드와 커널 모드 전환 횟수를 최소화한다.
 - 운영체제에서 응용 프로그램은 유저 모드와 커널 모드를 끊임없이 오가며 실행된다.
	여기서 문제는 유저 모드와 커널 모드의 전환이 CPU 사이클을 상당히 소모한다는 점이다.
	이상적인 소켓 입출력 모델에서는 가능한 많은 작업을 모드 전환 없이 처리할 수 있어야 한다.